import curses
import time

def opening_page(stdscr):
    draw_centered_art(stdscr,ascii_open)

def step1_func(stdscr):
    draw_centered_art_enter(stdscr,step1)

def step1_func_err1(stdscr):
    draw_centered_art_enter(stdscr,step1_err1)

def step1_func_err2(stdscr):
    draw_centered_art_enter(stdscr,step1_err2)

def run_with_ascii_loading(stdscr, ascii_art, target_fn, *args):
    import threading

    running_flag = {'running': True}
    loading_thread = threading.Thread(target=draw_centered_loading, args=(stdscr, ascii_art, running_flag))
    loading_thread.start()

    result = target_fn(*args)

    running_flag['running'] = False
    loading_thread.join()

    return result

def draw_centered_art(stdscr, ascii_art):
    stdscr.clear()
    height, width = stdscr.getmaxyx()

    art_height = len(ascii_art)
    art_width = max(len(line) for line in ascii_art)
    start_y = (height - art_height) // 2
    start_x = (width - art_width) // 2

    stdscr.nodelay(True)

    for i, line in enumerate(ascii_art):
        try:
            stdscr.addstr(start_y + i, start_x, line)
            stdscr.refresh()
            if stdscr.getch() != -1:
                break
            curses.napms(50)
        except curses.error:
            pass

    curses.napms(1800)

def draw_centered_art_enter(stdscr, ascii_art):
    stdscr.clear()
    height, width = stdscr.getmaxyx()

    art_height = len(ascii_art)
    art_width = max(len(line) for line in ascii_art)
    start_y = (height - art_height) // 2
    start_x = (width - art_width) // 2

    stdscr.nodelay(False)

    for i, line in enumerate(ascii_art):
        try:
            stdscr.addstr(start_y + i, start_x, line)
            stdscr.refresh()
            curses.napms(50)  # delay between lines
        except curses.error:
            pass

    while True:
        key = stdscr.getch()
        if key == ord('\n') or key == curses.KEY_ENTER:
            break

def draw_centered_loading(stdscr, ascii_art, running_flag):
    stdscr.nodelay(True)
    height, width = stdscr.getmaxyx()

    art_height = len(ascii_art)
    art_width = max(len(line) for line in ascii_art)
    start_y = (height - art_height) // 2
    start_x = (width - art_width) // 2

    while running_flag['running']:
        stdscr.clear()
        
        # Draw ASCII art
        for idx, line in enumerate(ascii_art):
            try:
                stdscr.addstr(start_y + idx, start_x, line)
                stdscr.refresh()
                curses.napms(50)  # delay between lines
            except curses.error:
                pass

        stdscr.refresh()
        curses.napms(225)  # pauses for 150 milliseconds


step1 = [
    "███████ ████████ ███████ ██████       ██    ",
    "██         ██    ██      ██   ██     ███ ██ ",
    "███████    ██    █████   ██████       ██    ",
    "     ██    ██    ██      ██           ██ ██ ",
    "███████    ██    ███████ ██           ██    ",
    "                                            ",
    "                                            ",
    "                                            ",
    "                                            ",
    "      Please select a folder with only      ",
    "        MP4s, anything else will be         ",
    "                rejected.                   ",
    "                                            ",
    "                                            ",
    "                                            ",
    "                                            ",
    "         [PRESS ENTER TO CONTINUE]          "
]

step1_err1 = [
    "███████ ████████ ███████ ██████       ██    ",
    "██         ██    ██      ██   ██     ███ ██ ",
    "███████    ██    █████   ██████       ██    ",
    "     ██    ██    ██      ██           ██ ██ ",
    "███████    ██    ███████ ██           ██    ",
    "                                            ",
    "                                            ",
    "                                            ",
    "             [IMPORPER FORMAT]              ",
    "             [EMPTY DIRECTORY]              ",
    "      Please select a folder with only      ",
    "        MP4s, anything else will be         ",
    "                rejected.                   ",
    "                                            ",
    "                                            ",
    "                                            ",
    "                                            ",
    "         [PRESS ENTER TO CONTINUE]          "
]

step1_err2 = [
    "███████ ████████ ███████ ██████       ██    ",
    "██         ██    ██      ██   ██     ███ ██ ",
    "███████    ██    █████   ██████       ██    ",
    "     ██    ██    ██      ██           ██ ██ ",
    "███████    ██    ███████ ██           ██    ",
    "                                            ",
    "                                            ",
    "                                            ",
    "             [IMPORPER FORMAT]              ",
    "            [INCORRECT FILETYPE]            ",
    "      Please select a folder with only      ",
    "        MP4s, anything else will be         ",
    "                rejected.                   ",
    "                                            ",
    "                                            ",
    "                                            ",
    "                                            ",
    "         [PRESS ENTER TO CONTINUE]          "
]

ascii_open = [
    "███████ ██████  ██████   █████   ██████  ██    ██ ███████ ",
    "██      ██   ██ ██   ██ ██   ██ ██       ██    ██ ██      ",
    "███████ ██████  ██████  ███████ ██   ███ ██    ██ █████   ",
    "     ██ ██      ██   ██ ██   ██ ██    ██ ██    ██ ██      ",
    "███████ ██      ██   ██ ██   ██  ██████   ██████  ███████ ",
    "                                                           ",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠤⠾⠟⠓⠚⠓⠲⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠋⠀⠀⠀⠀⠀⠀⢀⣄⣠⣌⣙⠶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⣴⡚⠋⠉⠁⠈⠉⠑⠺⣦⡀⠀⢀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠁⠀⠀⠀⠀⢀⡠⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⣀⠉⠉⠉⠉⠙⠻⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠿⠦⠑⠀⠀⠀⠀⠀⠀⠈⠛⢦⡀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢤⣿⠆⠀⠀⠀⠀⠀⣿⣿⡆⠀⠀⠀⠙⢶⣄⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠚⠉⣸⡇⠀⠀⠀⠀⢲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⠇⠀⠀⠀⠀⠀⠀⣀⣀⣀⣠⣤⡖⠴⢤⡽⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⣠⠞⠁⢀⣤⡴⡿⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⡷⠀⠀⠀⠒⠈⠉⡠⠄⠒⣲⠖⠁⣠⣣⢟⠦⡀⠀",
    "⠀⠀⠀⠀⢠⠞⠁⣠⠞⠉⠀⠀⡇⠀⠀⠀⠀⠀⢘⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠐⠉⠀⠀⠀⢀⡠⠊⠁⠀⣠⠾⠛⠋⠉⠁⠀⠈⢣⠈⠣",
    "⠀⠀⠀⣰⠋⣠⠞⠁⠀⠀⠀⢸⠷⢶⣆⣀⠀⠀⠀⢹⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⢀⣀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀",
    "⠀⠀⣰⠃⢰⠃⠀⠀⠀⠀⠀⢸⡄⠈⠙⣿⡉⠉⠉⠉⠛⠳⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣇⡴⠊⡘⠛⠒⢲⣦⡀⠀⠀⠀⠀⠀⠈⠀",
    "⠀⠀⡟⠀⡏⠀⠀⠀⠀⠀⠀⣿⠀⣄⠠⡘⢿⣦⠀⠀⠀⠀⠈⠙⠳⣦⣶⡶⠂⡀⣠⣠⡦⠟⠻⠷⢴⣇⢠⣤⣙⢾⡷⠀⠀⠀⠀⠀⠀⠀",
    "⠀⢸⡇⠀⡇⠀⠀⠀⠀⠀⠀⠙⣧⡟⢷⡵⠼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⡋⠉⠘⢷⣤⣀⠀⢸⠙⠛⠃⠉⠛⠁⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠘⣧⢰⡇⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡟⢸⡄⢆⢳⣽⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⢠⡇⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠞⢳⠛⢿⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⣼⢣⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⣸⡿⠋⠀⠀                                                   ",
    "               ███████ ██    ██ ███████ ",
    "               ██       ██  ██  ██      ",
    "               █████     ████   █████   ",
    "               ██         ██    ██      ",
    "               ███████    ██    ███████ "

]

frame_split = [
    "███████ ██████  ██      ██ ████████ ████████ ██ ███    ██  ██████  ",
    "██      ██   ██ ██      ██    ██       ██    ██ ████   ██ ██       ",
    "███████ ██████  ██      ██    ██       ██    ██ ██ ██  ██ ██   ███ ",
    "     ██ ██      ██      ██    ██       ██    ██ ██  ██ ██ ██    ██ ",
    "███████ ██      ███████ ██    ██       ██    ██ ██   ████  ██████  ",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣄⡀⠀⠀⠀⠀⠙⢮⣧⠀⡀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣸⣄⣤⣿⠷⠿⠟⣶⠶⠶⠛⠛⠓⢲⡄⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠿⠿⢿⡛⣦⠀⠀⠀⣾⡯⠀⠀⣶⣀⣾⠇⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣤⠼⣴⣶⣤⣾⡟⠀⠀⠀⠈⠀⠀⢀⣿⡿⣷⡀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡶⠒⠛⠋⠉⠉⠁⠀⠀⠉⠉⠛⠁⠀⠀⠀⢀⣠⠖⢫⠏⡇⢻⠳⠄",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⠚⠁⠀⠊⠀⠃⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⠀⠀⠀⣶⢿⣝⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⣤⣀⠈⠳⢦⡝⠿⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠈⠙⢶⣾⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠁⠀⠀⠀⠘⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣠⠤⠔⠋⠀⣠⣾⡇⠀⠀⠀⠀⠀⠀⣠⡾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⣀⣀⣀⣀⣤⣤⣤⣴⣖⣒⣒⣛⣛⣉⣉⣉⣤⡤⠤⠤⠔⠚⠿⠛⣷⡀⠀⢀⣤⢶⣟⠯⠤⠤⠤⢤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣇⠘⢧⣄⠀⠉⠛⠒⠒⠒⠶⡍⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠳⢬⣉⣙⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠉⠙⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
    "         ███████ ██████   █████  ███    ███ ███████ ███████       ",
    "         ██      ██   ██ ██   ██ ████  ████ ██      ██            ",
    "         █████   ██████  ███████ ██ ████ ██ █████   ███████       ",
    "         ██      ██   ██ ██   ██ ██  ██  ██ ██           ██       ",
    "         ██      ██   ██ ██   ██ ██      ██ ███████ ███████       "
]

cropping_cage = [
    "██████ ██████   ██████  ██████  ██████  ██ ███    ██  ██████  ",
    "██      ██   ██ ██    ██ ██   ██ ██   ██ ██ ████   ██ ██       ",
    "██      ██████  ██    ██ ██████  ██████  ██ ██ ██  ██ ██   ███ ",
    "██      ██   ██ ██    ██ ██      ██      ██ ██  ██ ██ ██    ██ ",
    " ██████ ██   ██  ██████  ██      ██      ██ ██   ████  ██████  ",
    "                                                               ", 
    "           ⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀              ⠀⠀",
    "⠀               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠉⠛⠶⢤⣀⡀⠀⠀⠀⠀⠀⠀              ⠀⠀",
    "⠀               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⡴⠋⢰⠞⠛⢷⠀⠈⠙⠳⠦⣄⣀⠀⠀⠀              ⠀",
    "              ⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⣠⠞⠁⠀⠘⠒⠒⠋⠀⣠⣤⡀⠀⠀⠉⠛⢶⣤⣀              ",
    "⠀⠀⠀               ⠀⠀⠀⠀⠀⠀⢀⡼⠋⢀⡴⠖⠶⢦⠀⠀⠀⢧⣬⠇⣀⣠⠴⠞⠋⠁⡏              ",
    "⠀⠀⠀⠀               ⠀⠀⠀⠀⣠⠟⠀⠀⠘⠧⣤⣀⡼⠀⢀⣀⡤⠶⢛⣩⣤⣀⠀⢠⡞⠋              ",
    "⠀⠀⠀               ⠀⠀⠀⣠⠞⣁⣀⠀⠀⠀⠀⢀⣠⡴⠖⠋⠁⠀⠀⣿⠁⠀⣹⠀⠈⢷⡄              ",
    "⠀⠀           ⠀    ⠀⣠⠞⠁⠀⠷⠿⣀⣤⠴⠚⠉⠁⠀⠀⠀⠀⠀⠀⠈⠓⠒⠃⠀⠀⠀⡇              ",
    "               ⠀⠀⣠⠞⣁⣠⡤⠶⠚⠛⠉⠀⠀⠀⣀⡁⠀⠀⠀⠀⢀⡤⠶⠶⠦⣄⠀⠀⠀⡇              ",
    "⠀               ⡾⠛⠋⢉⣤⢤⣀⠀⠀⠀⠀⣰⠞⠉⠙⠳⡄⠀⠀⡟⠀⢀⠀⠰⢺⡆⠀⠀⡇              ",
    "⠀               ⡇⠀⢰⡏⠀⠀⢹⡆⠀⠀⠀⡇⠀⠀⠄⠀⣿⠀⠀⠳⣄⡀⠀⢀⣸⠇⠀⠀⡇              ",
    "⠀               ⡏⠀⠀⢷⣤⣤⠞⠁⠀⠀⠀⢷⣀⣀⣠⡴⠓⠀⠀⠀⡈⠉⠉⠉⠁⣁⣠⠴⠇              ",
    "⠀               ⠻⣆⠀⠀⠀⠀⢀⣀⣤⣀⠀⠈⠉⠩⠁⠀⠀⠀⠁⠀⢀⣨⡤⠖⠛⠉⠀⠀⠀              ",
    "⠀               ⠀⡿⠀⠀⠀⢰⡏⠀⠀⢹⡆⠀⠀⠀⠀⠀⣀⣤⠶⠚⠉⠃⠀⠀⠀⠀⠀⠀              ⠀",
    "               ⢰⠞⠁⠀⠀⠀⠈⢷⣄⣤⠞⠁⣁⣤⠴⠚⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀              ",
    "               ⢸⡎⠀⠀⠀⠀⠀⠀⣀⡤⠖⠛⠉⠀               ⠀⠀⠀              ",
    "               ⢸⡇⠀⢀⣠⡴⠞⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀              ",
    "⠀              ⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                       ",
    "                                                               ", 
    "         ██ ███    ███  █████   ██████  ███████ ███████        ",
    "         ██ ████  ████ ██   ██ ██       ██      ██             ",
    "         ██ ██ ████ ██ ███████ ██   ███ █████   ███████        ",
    "         ██ ██  ██  ██ ██   ██ ██    ██ ██           ██        ",
    "         ██ ██      ██ ██   ██  ██████  ███████ ███████        "
]

image_stitch = [
    "    ██    ██ ██ ██████  ███████  ██████  ",
    "    ██    ██ ██ ██   ██ ██      ██    ██ ",
    "    ██    ██ ██ ██   ██ █████   ██    ██ ",
    "     ██  ██  ██ ██   ██ ██      ██    ██ ",
    "      ████   ██ ██████  ███████  ██████  ",
    "                                         ",
    "                                         ",
    "    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠐⠒⠂⠀⠀⠀⠀⠀⠈⠉⠐⠂⠄⡀⠀⠀⠀  ⠀⠀",
    " ⠀    ⠀⠀⠀⠀⠀⠀⡠⠂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠄⠀⠀⠀ ",
    "    ⠀ ⠀⠀⠀⠠⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠄⠂⠀⠀⠀⠀⠀⠀⠈⢂⠀⠀ ",
    "     ⠀⢠⡖⡲⣅⣠⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢢⠀ ",
    "⠀     ⠈⠿⣿⠧⠋⠀⠉⢇⡀⠀⠀⠦⠀⠀⠀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱ ",
    "⠀     ⠘⠀⠁⠀⢀⠀⠀⠀⡌⡄⠀⢀⣄⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰ ",
    "     ⢶⡚⡆⠀⠀⠘⠇⠀⠀⠑⣴⡔⠉⣡⣧⡷⣃⠀⠀⠀⣀⡴⠂⠀⠀⠀⠀⢀⡴⢾ ",
    "⠀     ⠉⠓⢔⣤⡀⢀⠀⢀⠄⣹⠇⢠⠛⢛⡠⣊⢤⠖⠚⢧⣘⣦⢀⢀⡐⠋⣹⠀⣸ ",
    "⠀⠀     ⠀⠀⠈⠀⠪⢑⣤⡷⠹⠷⡾⢚⢄⢼⣻⡹⠒⠉⠀⠀⠀⠉⠙⠂⠒⡛⠄⡾ ",
    "⠀⠀⠀ ⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠈⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⢊⠤⡼⠁ ",
    "⠀⠀⠀⠀ ⠀⠀⠀ ⠀   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠠⠐⣂⣻⡦⠶⠟⠊⠀⠀ ",
    "⠀⠀⠀⠀⠀ ⠀⠀⠀ ⠀⠀⠀   ⠀⠀⠀⠀⠀⢀⢔⡨⠓⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀ ",
    "⠀⠀⠀⠀⠀⠀ ⠀⠀⠀ ⠀⠀⠀⠀⠀   ⠀⢀⡕⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ",
    "                                         ",
    "                                         ",
    "███████ ████████ ██ ████████  ██████ ██   ██ ",
    "██         ██    ██    ██    ██      ██   ██ ",
    "███████    ██    ██    ██    ██      ███████ ",
    "     ██    ██    ██    ██    ██      ██   ██ ",
    "███████    ██    ██    ██     ██████ ██   ██ "

]